---
// src/components/Header.astro
const navLinks = [
  { href: "#experiencia", text: "Experiencia" },
  { href: "#habilidades", text: "Habilidades" },
  { href: "#proyectos", text: "Proyectos" },
  { href: "#contacto", text: "Contacto" },
];
---

<header
  id="main-header"
  class="fixed top-0 z-40 w-full flex justify-center items-center py-4 px-6 text-white backdrop-blur-sm transition-colors duration-300"
>
  <nav class="flex justify-between items-center w-full max-w-4xl">
    <a href="#" class="text-lg font-bold z-50">Lucas Gorini</a>

    <!-- Desktop nav -->
    <div class="hidden md:flex items-center gap-6">
      {
        navLinks.map((link) => (
          <a
            href={link.href}
            class="transition-transform duration-300 hover:scale-110"
          >
            {link.text}
          </a>
        ))
      }
    </div>

    <!-- Mobile button -->
    <button
      id="mobile-menu-button"
      class="md:hidden p-2 rounded focus:outline-none focus:ring-2 focus:ring-white/50 z-50"
      aria-label="Abrir menú"
      aria-expanded="false"
      aria-controls="mobile-menu"
    >
      <svg
        id="menu-icon"
        class="h-6 w-6"
        xmlns="http://www.w3.org/2000/svg"
        fill="none"
        viewBox="0 0 24 24"
        stroke="currentColor"
      >
        <path
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="2"
          d="M4 6h16M4 12h16m-7 6h7"></path>
      </svg>
      <svg
        id="close-icon"
        class="h-6 w-6 hidden"
        xmlns="http://www.w3.org/2000/svg"
        fill="none"
        viewBox="0 0 24 24"
        stroke="currentColor"
      >
        <path
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="2"
          d="M6 18L18 6M6 6l12 12"></path>
      </svg>
    </button>
  </nav>
</header>

<!-- Mobile menu panel -->
<div
  id="mobile-menu"
  class="md:hidden fixed inset-0 bg-slate-900 hidden flex-col items-center justify-center space-y-10 z-30"
>
  {
    navLinks.map((link) => {
      return (
        <a
          href={link.href}
          class="text-3xl font-bold transition-colors hover:text-sky-400 mobile-nav-link"
        >
          {link.text}
        </a>
      );
    })
  }
</div>

<!-- HERO SECTION - UPDATED -->
<section
  id="hero"
  class="h-screen flex flex-col items-center justify-center text-center px-4 bg-gradient-to-b from-slate-950 to-slate-900 text-white"
>
  <img
    src="/lucascv2.jpg"
    alt="Foto de Lucas Gorini"
    class="w-32 h-32 rounded-full mb-6 border-4 border-white shadow-lg object-cover"
  />
  <h1 class="text-4xl md:text-5xl font-bold mb-4">Hola, soy Lucas Gorini...</h1>
  <p class="text-lg md:text-xl max-w-xl mb-8 text-slate-300">
    Desarrollador Web Front-End apasionado por crear experiencias digitales
    intuitivas, eficientes y modernas.
  </p>
  <!-- Container for the action buttons with updated styles and links -->
  <div class="flex flex-wrap justify-center gap-4">
    <!-- Button 1: View Projects -->
    <a
      href="#proyectos"
      class="bg-sky-600 hover:bg-sky-700 text-white font-semibold rounded-full px-6 py-3 transition-all duration-300 hover:scale-105"
    >
      Ver Proyectos
    </a>
    <!-- Button 2: Download CV (links to contact section) -->
    <a
      href="#contacto"
      class="bg-white/10 hover:bg-white/20 text-white font-semibold rounded-full px-6 py-3 transition-all duration-300 hover:scale-105"
    >
      Descargar CV
    </a>
  </div>
</section>

<script type="module">
  window.addEventListener("DOMContentLoaded", () => {
    const menuButton = document.getElementById("mobile-menu-button");
    const mobileMenu = document.getElementById("mobile-menu");
    const menuIcon = document.getElementById("menu-icon");
    const closeIcon = document.getElementById("close-icon");
    const navLinks = document.querySelectorAll(".mobile-nav-link");

    if (!menuButton || !mobileMenu || !menuIcon || !closeIcon) return;

    const toggleMenu = () => {
      const isHidden = mobileMenu.classList.contains("hidden");
      mobileMenu.classList.toggle("hidden");
      menuIcon.classList.toggle("hidden");
      closeIcon.classList.toggle("hidden");
      document.body.classList.toggle("overflow-hidden");
      menuButton.setAttribute("aria-expanded", isHidden ? "true" : "false");
    };

    menuButton.addEventListener("click", toggleMenu);
    navLinks.forEach((link) =>
      link.addEventListener("click", () => {
        if (!mobileMenu.classList.contains("hidden")) {
          toggleMenu();
        }
      })
    );
  });
</script>